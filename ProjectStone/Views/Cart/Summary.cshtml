@using ProjectStone_Utility
@model ProjectStone_Models.ViewModels.ProductUserViewModel

<form id="payment-form" method="post">
    <br/>
    <div class="border-white">
        <div class="container">
            <div class="card">
                <div class="card-header bg-dark text-light ms-0 row container">
                    <div class="col-6">
                        <i class="fa fa-shopping-cart"></i> &nbsp;
                        Order Summary
                    </div>
                    <div class="col-6 text-end">
                        <a asp-action="Index" class="btn btn-outline-info btn-sm">Back to Cart</a>
                    </div>
                </div>
                <div class="card-body">
                    <div class="container rounded p-2">
                        <div class="row">
                            <div class="col-12 col-lg-7 pb-4">
                                <div class="row">
                                    <h4 class="d-flex justify-content-between align-items-center mb-3">
                                        <span class="text-info">User Details:</span>
                                    </h4>
                                </div>
                                <div class="row my-1">
                                    <div class="col-3">
                                        <label>Name</label>
                                    </div>
                                    <div class="col-9">
                                        <input asp-for="ApplicationUser.FullName" class="form-control" required type="text"/>
                                    </div>
                                </div>
                                <div class="row my-1">
                                    <div class="col-3">
                                        <label>Phone</label>
                                    </div>
                                    <div class="col-9">
                                        <input asp-for="ApplicationUser.PhoneNumber" class="form-control" required type="text"/>
                                    </div>
                                </div>
                                <div class="row my-1">
                                    <div class="col-3">
                                        <label>Email</label>
                                    </div>
                                    <div class="col-9">
                                        <input asp-for="ApplicationUser.Email" class="form-control" required type="text"/>
                                    </div>
                                </div>
                                @if (User.IsInRole(WebConstants.AdminRole))
                                {
                                    <div class="row my-1">
                                        <div class="col-3">
                                            <label>Address</label>
                                        </div>
                                        <div class="col-9">
                                            <input asp-for="ApplicationUser.Address" class="form-control" type="text"/>
                                        </div>
                                    </div>
                                    <div class="row my-1">
                                        <div class="col-3">
                                            <label>City</label>
                                        </div>
                                        <div class="col-9">
                                            <input asp-for="ApplicationUser.City" class="form-control" type="text"/>
                                        </div>
                                    </div>
                                    <div class="row my-1">
                                        <div class="col-3">
                                            <label>State</label>
                                        </div>
                                        <div class="col-9">
                                            <input asp-for="ApplicationUser.State" class="form-control" type="text"/>
                                        </div>
                                    </div>
                                    <div class="row my-1">
                                        <div class="col-3">
                                            <label>Postal Code</label>
                                        </div>
                                        <div class="col-9">
                                            <input asp-for="ApplicationUser.PostalCode" class="form-control" type="text"/>
                                        </div>
                                    </div>
                                }

                            </div>
                            <div class="col-12 col-lg-5 row">
                                <div class="col-12">
                                    <h4 class="d-flex justify-content-between align-items-center mb-3">
                                        <span class="text-info">Summary:</span>
                                    </h4>
                                    <ul class="list-group mb-3">
                                        @* Setup variable for order value capture *@
                                        @{ var orderTotal = 0.0; }
                                        @* We use for-loop instead of foreach because the foreach does not capture all the data properly. *@
                                        @for (var i = 0; i < Model.ProductList.Count(); i++)
                                        {
                                            <input asp-for="@Model.ProductList[i].Id" type="hidden"/>
                                            <input asp-for="@Model.ProductList[i].Name" type="hidden"/>
                                            <input asp-for="@Model.ProductList[i].Price" type="hidden"/>
                                            <input asp-for="@Model.ProductList[i].TempSqFt" type="hidden"/>
                                            <li class="list-group-item d-flex justify-content-between">
                                                <div>
                                                    <h6 class="my-0">@Model.ProductList[i].Name</h6>
                                                    @if (User.IsInRole(WebConstants.AdminRole))
                                                    {
                                                        <small class="text-muted">Sqft: @(Model.ProductList[i].TempSqFt)</small>
                                                    }
                                                    else
                                                    {
                                                        <small class="text-muted">Price per Sqft: @(Model.ProductList[i].Price.ToString("C"))</small>
                                                    }
                                                </div>
                                                @if (User.IsInRole(WebConstants.AdminRole))
                                                {
                                                    <span class="text-muted">@((Model.ProductList[i].Price * Model.ProductList[i].TempSqFt).ToString("C"))</span>
                                                }
                                            </li>
                                            orderTotal += Model.ProductList[i].Price * Model.ProductList[i].TempSqFt;
                                        }
                                        @if (User.IsInRole(WebConstants.AdminRole))
                                        {
                                            <li class="list-group-item d-flex justify-content-between bg-light">
                                                <small class="text-info"> Total (USD)</small>
                                                <strong class="text-info">@orderTotal.ToString("C")</strong>
                                            </li>
                                        }
                                    </ul>
                                </div>
                                @if (User.IsInRole(WebConstants.AdminRole))
                                {
                                    /* We only want this transaction if the user is an admin. */
                                    <div class="col-12">
                                        <div class="container">
                                            <div id="dropin-container"></div>
                                            @* Grab the nonce val from here via JS to add it to the post method *@
                                            <input id="nonce" name="payment_method_nonce" type="hidden"/>
                                        </div>
                                    </div>
                                }
                            </div>
                        </div>
                    </div>
                </div>
                <div class="card-footer">
                    <div class="row">
                        <div class="col-12 col-md-5 offset-md-7">
                            @if (User.IsInRole(WebConstants.AdminRole))
                            {
                                <button class="btn btn-success form-control" id="submitOrderBtn" onclick="return validateInput();" type="submit">Submit Order</button>
                            }
                            else
                            {
                                <button class="btn btn-primary form-control" onclick="return validateInput();" type="submit">Submit Inquiry</button>
                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</form>


@section Scripts{
    <partial name="_ValidationScriptsPartial"/>

    <script src="https://js.braintreegateway.com/web/dropin/1.31.2/js/dropin.min.js"></script>
    <script>
        // ToDo later: separate any scripts into their own JS file for organizational purposes.

        // BrainTree.
        // Retrieve client token from ViewBag.
        var clientToken = "@ViewBag.ClientToken";

        // Set to form instead of button (example: https://developer.paypal.com/braintree/docs/start/drop-in)
        var form = document.querySelector('#payment-form');

        braintree.dropin.create({
            authorization: clientToken, // 'CLIENT_TOKEN_FROM_SERVER'
            selector: '#dropin-container'
        }, function(err, instance) {
            form.addEventListener('submit', function() {
                // Prevent the form from being posted automatically to the SummaryPost action method.
                event.preventDefault();

                // Add the nonce to the form, then submit.
                instance.requestPaymentMethod(function(err, payload) {
                    // Submit payload.nonce to your server
                    document.querySelector('#nonce').value = payload.nonce;
                    // Now submit the form.
                    form.submit();
                });
            });
        });

        // SweetAlert2.
        // Post only if validateInput returns true. If false, do not post, display error.
        function validateInput() {
            // Get input types. "." are translated to "_" for the element Ids of asp properties.
            const appName = document.getElementById("ApplicationUser_FullName").value;
            const appPhone = document.getElementById("ApplicationUser_PhoneNumber").value;
            const appEmail = document.getElementById("ApplicationUser_Email").value;
            const appAddress = document.getElementById("ApplicationUser_Address").value;
            const appCity = document.getElementById("ApplicationUser_City").value;
            const appState = document.getElementById("ApplicationUser_State").value;
            const appPostalCode = document.getElementById("ApplicationUser_PostalCode").value;

            // Check input type values.
            if (appName.toString() == '') {
                Swal.fire({
                    icon: 'error',
                    title: 'Well, this is awkward...',
                    text: 'Please enter Full Name to continue!'
                });
                // Return false so the form is not posted.
                return false;
            }
            if (appPhone.toString() == '') {
                Swal.fire({
                    icon: 'error',
                    title: 'Well, this is awkward...',
                    text: 'Please enter Phone Number to continue!'
                });
                return false;
            }
            if (appEmail.toString() == '') {
                Swal.fire({
                    icon: 'error',
                    title: 'Well, this is awkward...',
                    text: 'Please enter Email to continue!'
                });
                return false;
            }
            if (appAddress.toString() == '') {
                Swal.fire({
                    icon: 'error',
                    title: 'Well, this is awkward...',
                    text: 'Please enter Address to continue!'
                });
                return false;
            }
            if (appCity.toString() == '') {
                Swal.fire({
                    icon: 'error',
                    title: 'Well, this is awkward...',
                    text: 'Please enter City to continue!'
                });
                return false;
            }
            if (appState.toString() == '') {
                Swal.fire({
                    icon: 'error',
                    title: 'Well, this is awkward...',
                    text: 'Please enter State to continue!'
                });
                return false;
            }
            if (appPostalCode.toString() == '') {
                Swal.fire({
                    icon: 'error',
                    title: 'Well, this is awkward...',
                    text: 'Please enter Postal Code to continue!'
                });
                return false;
            }
            
            // Return true if no error.
            return true;
        }
    </script>
}